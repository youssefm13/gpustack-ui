version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
      target: production
    container_name: gpustack-ui-backend-mac-prod
    ports:
      - "8001:8001"
    environment:
      - ENV=production
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      - LOG_LEVEL=info
      - WORKERS=8  # Optimized for M3 Ultra
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - GPUSTACK_API_BASE=http://192.168.1.231:80
      - GPUSTACK_API_TOKEN=gpustack_d832b8eaabea94da_367798f8b89db33600d335d622531e1b
    volumes:
      - ./.env.prod:/app/.env.prod:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 8G  # Mac Studio Ultra 3 has plenty of RAM
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'
    networks:
      - gpustack-network

  # Redis for caching and session storage (optimized for Mac)
  redis:
    image: redis:7-alpine
    container_name: gpustack-ui-redis-mac-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    networks:
      - gpustack-network

  # Nginx reverse proxy with SSL support
  nginx:
    image: nginx:alpine
    container_name: gpustack-ui-nginx-mac-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.mac-prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - gpustack-network

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: gpustack-ui-prometheus-mac
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - gpustack-network

  # Optional: Grafana for monitoring dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: gpustack-ui-grafana-mac
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    networks:
      - gpustack-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  gpustack-network:
    driver: bridge 