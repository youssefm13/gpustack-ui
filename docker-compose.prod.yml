version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      target: production
    container_name: gpustack-ui-backend-prod
    ports:
      - "8001:8001"
    environment:
      - ENV=production
      - GPUSTACK_API_BASE=${GPUSTACK_API_BASE:-http://localhost:8080}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      - LOG_LEVEL=info
      - WORKERS=4
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - gpustack-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      target: production
    container_name: gpustack-ui-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - BACKEND_URL=http://backend:8001
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - gpustack-network

  # Redis for caching and session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: gpustack-ui-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - gpustack-network

  # Nginx load balancer and reverse proxy
  nginx:
    image: nginx:alpine
    container_name: gpustack-ui-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - gpustack-network

volumes:
  redis_data:
    driver: local

networks:
  gpustack-network:
    driver: bridge
